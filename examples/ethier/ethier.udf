//
// nekRS User Defined File
//

#include <math.h>
#include "udf.hpp"
#include "casedata.h"

static int ciMode = 0;
#include "ethier_ci.h"

/* UDF Functions */   

occa::kernel dpdxKernel; 

void userq(ins_t *ins, dfloat time, occa::memory o_S, occa::memory o_FS)
{
  mesh_t *mesh = ins->mesh; 
  cds_t *cds   = ins->cds; 
  const dlong Nlocal = ins->mesh->Nelements * ins->mesh->Np;
  dpdxKernel(Nlocal, time, mesh->o_x, mesh->o_y, mesh->o_z, cds->sOffset, o_FS);

}                                                   

void UDF_LoadKernels(ins_t *ins)
{
  dpdxKernel = udfBuildKernel(ins, "dpdx");
}

void UDF_Setup0(MPI_Comm comm, setupAide &options)
{
  options.getArgs("CI-MODE", ciMode);
  if (ciMode) ciSetup(comm, options);
}

void UDF_Setup(ins_t *ins)
{
  // get IC from nek
  if (!ins->readRestartFile) nek_copyTo(ins, ins->startTime);
  udf.sEqnSource = &userq;
}

void UDF_ExecuteStep(ins_t *ins, dfloat time, int tstep)
{
  if (ins->isOutputStep) nek_userchk();
  if (ciMode) ciTestErrors(ins, time, tstep);
}
