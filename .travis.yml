language: python
sudo: required
dist: bionic

env:
  global:
  - before_test="source /home/travis/.local/nekrs/bin/nekrs.bashrc"
  - OCCA_CACHE_DIR=$HOME/.local/nekrs/occa_cache
  - MAKEFLAGS="-j4"
  - CUDA=10.1.105-1
  - CUDA_SHORT=10.1
  - UBUNTU_VERSION=ubuntu1804

cache:
  timeout: 3600
  directories:
    - $HOME/.local/nekrs

sudo: required

stages:
  - prepare
  - warmup
  - test

jobs:
  include:
   - stage: prepare
     name: "install"
     script: rm -rf $HOME/.local/nekrs && cd $TRAVIS_BUILD_DIR && OCCA_CUDA_ENABLED=0 ./makenrs 
   - stage: warmup
     name: "warm-up"
     script: $before_test && cd $NEKRS_EXAMPLES/ethier && nrspre ethier 1  
   - stage: test
     name: "ethier default"
     script: $before_test && cd $NEKRS_EXAMPLES/ethier && nrsmpi ethier 2 1 
   - stage: test
     name: "ethier subcycle"
     script: $before_test && cd $NEKRS_EXAMPLES/ethier && nrsmpi ethier 2 2 
   - stage: test
     name: "lowMach default"
     script: $before_test && cd $NEKRS_EXAMPLES/lowMach && nrsmpi lowMach 2 1 
   - stage: test
     name: "conj_ht"
     script: $before_test && cd $NEKRS_EXAMPLES/conj_ht && nrsmpi conj_ht 2 1


before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y libmpich-dev mpich
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-}
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64/stubs:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}
  - PATH=${PATH}:${PWD}

install:

before_script:
