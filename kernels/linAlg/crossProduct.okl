// v3 = v1 \cross v2
@kernel void crossProduct(const dlong N,
                          const dlong fieldOffset,
                          @ restrict const dfloat *v1,
                          @ restrict const dfloat *v2,
                          @ restrict dfloat *v3)
{

  for (dlong n = 0; n < N; ++n; @tile(p_blockSize, @outer, @inner)) {

    const dfloat v1x = v1[n + 0 * fieldOffset];
    const dfloat v1y = v1[n + 1 * fieldOffset];
    const dfloat v1z = v1[n + 2 * fieldOffset];

    const dfloat v2x = v2[n + 0 * fieldOffset];
    const dfloat v2y = v2[n + 1 * fieldOffset];
    const dfloat v2z = v2[n + 2 * fieldOffset];

    v3[n + 0 * fieldOffset] = v1y * v2z - v1z * v2y;
    v3[n + 1 * fieldOffset] = v1z * v2x - v1x * v2z;
    v3[n + 2 * fieldOffset] = v1x * v2y - v1y * v2x;
  }
}
