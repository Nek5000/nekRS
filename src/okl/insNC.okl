@kernel void insNC(const dlong N,
                   const dlong offset,
                   @restrict const  dfloat *  MUE,
                   @restrict const  dfloat *  iRHO,
                   @restrict const  dfloat *  gQTL,
                   @restrict const  dfloat *  NC)
{
  for(dlong n=0;n<N;++n;@tile(256,@outer,@inner)){
    if(n<N){
      dfloat nc_x = NC[n + 0*offset] - 4/3.f*gQTL[n + 0*offset];
      dfloat nc_y = NC[n + 1*offset] - 4/3.f*gQTL[n + 1*offset];
      dfloat nc_z = NC[n + 2*offset] - 4/3.f*gQTL[n + 2*offset];
      NC[n + 0*offset] = MUE[n]*iRHO[n]*nc_x;
      NC[n + 1*offset] = MUE[n]*iRHO[n]*nc_y;
      NC[n + 2*offset] = MUE[n]*iRHO[n]*nc_z;
    }
  }
}
