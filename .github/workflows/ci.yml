name: CI

on:
  # allows us to run workflows manually
  workflow_dispatch:

  push:
    branches:
      - master 

env:
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  NEKRS_HOME: "${{ github.workspace }}/.local/nekrs"
  NEKRS_INSTALL_DIR: "${{ github.workspace }}/.local/nekrs"
  MPICH_FC: "gfortran"
  NEKRS_EXAMPLES: "${{ github.workspace }}/.local/nekrs/examples"
  OCCA_CUDA_ENABLED: "0"
  OCCA_HIP_ENABLED: "0"
  OCCA_OPENCL_ENABLED: "0"
  NEKRS_COMPILER_FLAGS: "-O2"
  NEKRS_OCCA_MODE_DEFAULT: "SERIAL"
  NEKRS_CI: "1"

defaults:
  run:
    shell: bash

jobs:

  install:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        clean: true

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: nrsconfig and build
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: Upload install dir
      uses: actions/upload-artifact@v2
      with:
        name: install-dir
        retention-days: 2 
        path: ${{ env.NEKRS_INSTALL_DIR }}
        if-no-files-found: error

  ethier:
    needs: install
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        clean: true

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: Download install dir
      uses: actions/download-artifact@v2
      with:
        name: install-dir
        path: ${{ env.NEKRS_INSTALL_DIR }}

    - name: Set install dir permissions
      run: chmod -R 755 ${{ env.NEKRS_INSTALL_DIR }}

    - name: 'ethier default'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: |
        NEKRS_CACHE_DIR=${{ env.NEKRS_EXAMPLES }}/ethier/custom-cache-dir ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 1 --cimode 1

    - name: 'ethier subcycle'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 2

    - name: 'ethier velocity and pressure projection'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 3

    - name: 'ethier (block) velocity and pressure projection with subcycling'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 4

    - name: 'ethier default + moving mesh'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_ethier 2 --cimode 5

    - name: 'ethier subcycle + moving mesh + subcycling'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_ethier 2 --cimode 6

    - name: 'ethier gmres bug'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 7

    - name: 'ethier variable dt'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 8

    - name: 'ethier no dealiasing and subcycling'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 9

    - name: 'ethier no dealiasing'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 10

    - name: 'ethier Chebyshev+Jacobi'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ethier
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi ethier 2 --cimode 11

  lowMach:
    needs: install
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        clean: true

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: Download install dir
      uses: actions/download-artifact@v2
      with:
        name: install-dir
        path: ${{ env.NEKRS_INSTALL_DIR }}

    - name: Set install dir permissions
      run: chmod -R 755 ${{ env.NEKRS_INSTALL_DIR }}

    - name: 'lowMach default'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/lowMach
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi lowMach 2 --cimode 1


  mv_cyl:
    needs: install
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        clean: true

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: Download install dir
      uses: actions/download-artifact@v2
      with:
        name: install-dir
        path: ${{ env.NEKRS_INSTALL_DIR }}

    - name: Set install dir permissions
      run: chmod -R 755 ${{ env.NEKRS_INSTALL_DIR }}

    - name: 'mv_cyl'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl 2 --cimode 1

    - name: 'mv_cyl + subcycling'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl 2 --cimode 2

    - name: 'mv_cyl + subcycling + elasticity solve'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl 2 --cimode 3

    - name: 'mv_cyl + subcycling + elasticity solve (projection)'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl 2 --cimode 4

    - name: 'mv_cyl + unaligned SYM'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl 2 --cimode 5

    # TODO: resolve error in unaligned SYM + mesh solver
    #- name: 'mv_cyl + unaligned SYM + mesh solver'
    #  working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
    #  run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl 2 --cimode 6

    - name: 'mv_cyl, derived bc'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl_derived_bc 2 --cimode 1

    - name: 'mv_cyl + subcycling, derived bc'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl_derived_bc 2 --cimode 2

    - name: 'mv_cyl + subcycling + elasticity solve, derived bc'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl_derived_bc 2 --cimode 3

    - name: 'mv_cyl + subcycling + elasticity solve (projection), derived bc'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl_derived_bc 2 --cimode 4

    - name: 'mv_cyl + unaligned SYM, derived bc'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl_derived_bc 2 --cimode 5

    # TODO: resolve error in unaligned SYM + mesh solver
    #- name: 'mv_cyl + unaligned SYM + mesh solver, derived bc'
    #  working-directory: ${{ env.NEKRS_EXAMPLES }}/mv_cyl
    #  run: ${{ env.NEKRS_HOME }}/bin/nrsmpi mv_cyl_derived_bc 2 --cimode 6


  conj_ht:
    needs: install
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        clean: true

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: Download install dir
      uses: actions/download-artifact@v2
      with:
        name: install-dir
        path: ${{ env.NEKRS_INSTALL_DIR }}

    - name: Set install dir permissions
      run: chmod -R 755 ${{ env.NEKRS_INSTALL_DIR }}

    - name: 'conj_ht'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/conj_ht
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi conj_ht 2 --cimode 1


  channelStress:
    needs: install
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        clean: true

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: Download install dir
      uses: actions/download-artifact@v2
      with:
        name: install-dir
        path: ${{ env.NEKRS_INSTALL_DIR }}

    - name: Set install dir permissions
      run: chmod -R 755 ${{ env.NEKRS_INSTALL_DIR }}

    - name: 'channelStress (no rotation)'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/channel
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi channel 2 --cimode 1

    - name: 'channelStress (45 degree rotation)'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/channel
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi channel 2 --cimode 2

  tractionBoundary:
    needs: install
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        clean: true

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: Download install dir
      uses: actions/download-artifact@v2
      with:
        name: install-dir
        path: ${{ env.NEKRS_INSTALL_DIR }}

    - name: Set install dir permissions
      run: chmod -R 755 ${{ env.NEKRS_INSTALL_DIR }}

    - name: 'traction channel (no rotation)'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/shlChannel
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi channel 2 --cimode 1

    - name: 'traction channel (45 degree rotation)'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/shlChannel
      run: ${{ env.NEKRS_HOME }}/bin/nrsmpi channel 2 --cimode 2

  kershaw:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'kershaw pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/kershaw
      run: ${{ env.NEKRS_HOME }}/bin/nrspre kershaw 1


  ktauChannel:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'ktauChannel pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/ktauChannel
      run: ${{ env.NEKRS_HOME }}/bin/nrspre channel 1


  turbPipe:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'turbPipe pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/turbPipe
      run: ${{ env.NEKRS_HOME }}/bin/nrspre turbPipe 1


  turbPipePeriodic:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'turbPipePeriodic pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/turbPipePeriodic
      run: ${{ env.NEKRS_HOME }}/bin/nrspre turbPipe 1


  pb146:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'pb146 pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/pb146
      run: |
        tar -xvf pb.re2.tgz
        ${{ env.NEKRS_HOME }}/bin/nrspre pb 6


  rbc:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'rbc pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/rbc
      run: ${{ env.NEKRS_HOME }}/bin/nrspre rbc 1


  tgv:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'tgv pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/tgv
      run: ${{ env.NEKRS_HOME }}/bin/nrspre tgv 1


  double_shear:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'double_shear pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/double_shear
      run: ${{ env.NEKRS_HOME }}/bin/nrspre double_shear 1


  eddyPeriodic:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'eddyPeriodic pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/eddyPeriodic
      run: ${{ env.NEKRS_HOME }}/bin/nrspre eddy 1


  gabls1:
    runs-on: ubuntu-18.04
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: APT dependencies
      run: |
        sudo apt -y update
        sudo apt install -y mpich libmpich-dev

    - name: install
      run: |
        ./nrsconfig
        cmake --build build --target install -j 2

    - name: 'gabls pre-compile'
      working-directory: ${{ env.NEKRS_EXAMPLES }}/gabls1
      run: ${{ env.NEKRS_HOME }}/bin/nrspre gabls 1
