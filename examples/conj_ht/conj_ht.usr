c-----------------------------------------------------------------------
c   
c   The domain consists of two plates of finite thickness (h=0.5) 
c   with plane Poiseiulle flow moving between the plates from left 
c   to right (x=0 to 8).
c   
c   The gap height is 1.0 (y=0 to 1).
c   
c   The flow inlet temperature is T=0 and the plates are heated
c   with volumetric heat source, qvol = 1.
c
c   Insulated boundary conditions are applied on the solid
c   surfaces that are not interior to the computational domain,
c   so heat leaves only through advection at the flow outlet.
c
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      real err(2)
      save err
      COMMON /NRSSCPTR/ nrs_scptr(1)
      integer*8         nrs_scptr

      real  wrk(lx1,ly1,lz1,lelt,3)

      nrs_scptr(1) = loc(err(1))

      nv = nx1*ny1*nz1*nelv
      nt = nx1*ny1*nz1*nelt

      call copy(wrk(1,1,1,1,1),vx,nv)
      call copy(wrk(1,1,1,1,2),vy,nv)
      call copy(wrk(1,1,1,1,3), t,nt)
c      call load_fld('nekSolution.fld')
c      call sub2(wrk(1,1,1,1,1),vx,nv)
c      call sub2(wrk(1,1,1,1,2),vy,nv)
c      call sub2(wrk(1,1,1,1,3), t,nt)

      err_inf = glamax(wrk(1,1,1,1,1),nv)
      err_l2  = glsc3(wrk(1,1,1,1,1),bm1,wrk(1,1,1,1,1),nv)
      err(1) = sqrt(err_l2)
c      if(nid.eq.0) write(6,*) 'inf/L2 error vx:', err_inf, sqrt(err_l2)

c      err_inf = glamax(wrk(1,1,1,1,2),nv)
c      err_l2  = glsc3(wrk(1,1,1,1,2),bm1,wrk(1,1,1,1,2),nv)
c      if(nid.eq.0) write(6,*) 'inf/L2 error vy:', err_inf, sqrt(err_l2)

      err_inf = glamax(wrk(1,1,1,1,3),nt)
      err_l2  = glsc3(wrk(1,1,1,1,3),bm2,wrk(1,1,1,1,3),nt)
      err(2) = sqrt(err_l2)
c      if(nid.eq.0) write(6,*) 'inf/L2 error t:', err_inf, sqrt(err_l2)

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)

C     Set initial conditions

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux   = 4.0*y*(1. - y)
      uy   = 0.0
      uz   = 0.0
      temp = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'
      include 'TOTAL'
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'

      ! reconstruct boundary tags 
      do iel=1,nelv
      do ifc=1,2*ndim
         if (cbc(ifc,iel,1) .eq. 'v  ') boundaryID(ifc,iel) = 1
         if (cbc(ifc,iel,1) .eq. 'O  ') boundaryID(ifc,iel) = 2
         if (cbc(ifc,iel,1) .eq. 'W  ') boundaryID(ifc,iel) = 3
      enddo
      enddo

      do iel=1,nelt
      do ifc=1,2*ndim
         if (cbc(ifc,iel,2) .eq. 't  ') boundaryIDt(ifc,iel) = 1
         if (cbc(ifc,iel,2) .eq. 'O  ') boundaryIDt(ifc,iel) = 2
         if (cbc(ifc,iel,2) .eq. 'I  ') boundaryIDt(ifc,iel) = 3
      enddo
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
c-----------------------------------------------------------------------
