#!/bin/bash
#set -x

###############################################################################
# USER SETTINGS
###############################################################################

: ${NEKRS_INSTALL_DIR:=${HOME}/.local/nekrs}

: ${NEKRS_CC:="mpicc"}
: ${NEKRS_CXX:="mpic++"}
: ${NEKRS_FC:="mpif77"}
: ${NEKRS_CXXFLAGS:="-g -O2"}

: ${OCCA_CXX:="gcc"}
: ${OCCA_CXXFLAGS:="-O3 -march=native -mtune=native"}
: ${OCCA_CUDA_ENABLED:=1}
: ${OCCA_HIP_ENABLED:=0}
: ${OCCA_OPENCL_ENABLED:=0}

###############################################################################
# DONT'T TOUCH WHAT FOLLOWS !!!
###############################################################################
set -e -a
NEKRS_SOURCED=0
(return 0 2>/dev/null) && NEKRS_SOURCED=1
if [ ${NEKRS_SOURCED} -eq 1 ]; then
   NEKRS_EXIT_CMD=return
else
   NEKRS_EXIT_CMD=exit
fi

if [ $SHELL != "/bin/bash" ]  && [ $SHELL != "/bin/zsh" ]; then 
  echo "Error: user's login shell needs to be bash or zsh!"
  ${NEKRS_EXIT_CMD} 1
fi

: ${OCCA_METAL_ENABLED:=0}

NEKRS_CXXFLAGS+=" -DUSE_OCCA_MEM_BYTE_ALIGN=64" 

if uname -a | grep 'ppc64'; then
  NEKRS_CXXFLAGS=$(echo "$NEKRS_CXXFLAGS" | sed -e "s/march/mcpu/g")
  OCCA_CXXFLAGS=$(echo "$OCCA_CXXFLAGS" | sed -e "s/march/mcpu/g")
fi

NEKRS_CFLAGS="${NEKRS_CXXFLAGS}"
NEKRS_FFLAGS="${NEKRS_CXXFLAGS}"
NEKRS_DEBUG=0
NEKRS_LIBP_DEFINES="-DUSE_NULL_PROJECTION=1"
NEKRS_NEK5000_PPLIST="PARRSB DPROCMAP"

export OCCA_CXX
export OCCA_CXXFLAGS
export OCCA_CUDA_ENABLED
export OCCA_HIP_ENABLED
export OCCA_OPENCL_ENABLED
export OCCA_METAL_ENABLED
export OCCA_LDFLAGS

export NEKRS_CC
export NEKRS_CXX
export NEKRS_FC

export NEKRS_CFLAGS
export NEKRS_CXXFLAGS
export NEKRS_FFLAGS

export NEKRS_DEBUG
mkdir -p ${NEKRS_INSTALL_DIR} > /dev/null 2>&1
NEKRS_INSTALL_DIR=`echo "$(cd "$(dirname "${NEKRS_INSTALL_DIR}")"; pwd)/$(basename "${NEKRS_INSTALL_DIR}")"`
export NEKRS_INSTALL_DIR
export NEKRS_LIBP_DEFINES
export NEKRS_NEK5000_PPLIST

export NEKRS_DIR=`pwd`
export NEKRS_UDF_DIR="${NEKRS_INSTALL_DIR}/udf"
export NEKRS_NEKINTERFACE_DIR="${NEKRS_INSTALL_DIR}/nekInterface"
export NEKRS_NEK5000_DIR="${NEKRS_INSTALL_DIR}/nek5000"
export NEKRS_LIBP_DIR="${NEKRS_INSTALL_DIR}/libparanumal"

export OCCA_DIR="${NEKRS_INSTALL_DIR}/occa"

export PATH="${NEKRS_INSTALL_DIR}/bin:${PATH}"

function nekrs_info() {
  local GREEN='\033[0;92m'
  local NC='\033[0m' 
  echo -e "${GREEN} $1 ${NC}"
}
export -f nekrs_info

function nekrs_error() {
  local RED='\033[0;31m'
  local NC='\033[0m' 
  echo -e "${RED} $1 ${NC}"
}
export -f nekrs_error

export NEKRS_BUILD_DIR=`pwd`/build

if [ ${NEKRS_SOURCED} -eq 1 ]; then
  ${NEKRS_EXIT_CMD} 0
fi

if [ "${NEKRS_DIR}" =  "${NEKRS_INSTALL_DIR}" ]; then
  nekrs_error "Install directory and source directory are the same."
  ${NEKRS_EXIT_CMD} 1
fi

NEKRS_BUILD_TYPE=None
if [ ${NEKRS_DEBUG} -ne 0 ]; then
  NEKRS_BUILD_TYPE=Debug
fi

if [ "$#" -eq 1 ]; then
  if [[ "$1" = *"clean"* ]]; then
    set +e

    read -p "installation in $NEKRS_INSTALL_DIR? [N]" yn
    case $yn in
      [Yy]* )
        rm -rf $NEKRS_INSTALL_DIR >/dev/null 2>&1
        ;;
      * )
        ;;
    esac

    read -p "nekRS? [N]" yn
    case $yn in
      [Yy]* )
        rm -rf "${NEKRS_BUILD_DIR}"/CMakeFiles > /dev/null 2>&1
        ;;
      * )
        ;;
    esac

    read -p "OCCA? [N]" yn
    case $yn in
      [Yy]* )
        make -C ${NEKRS_BUILD_DIR}/3rd_party/occa clean > /dev/null 2>&1
        ;;
      * )
        ;;
    esac
    read -p "libParanumal? [N]" yn
    case $yn in
      [Yy]* )
        OCCA_DIR=${NEKRS_BUILD_DIR}/3rd_party/occa \
        make -C ${NEKRS_BUILD_DIR}/3rd_party/libparanumal/solvers/elliptic realclean  > /dev/null 2>&1
        ;;
      * )
        ;;
    esac

    read -p "nek 3rd-party? [N]" yn
    case $yn in
      [Yy]* )
        ${NEKRS_BUILD_DIR}/3rd_party/nek5000/bin/nekconfig clean << EOF
y
EOF
        ;;
      * )
        ;;
    esac
    set -e
    exit 0
  else
    nekrs_info "Usage: makenrs [clean]"
    ${NEKRS_EXIT_CMD} 1
  fi
fi

nekrs_info "Building NekRS ..."
mkdir -p "${NEKRS_BUILD_DIR}" > /dev/null 2>&1
rm -rf "${NEKRS_BUILD_DIR}"/CMakeCache.txt "${NEKRS_BUILD_DIR}"/*.cmake > /dev/null 2>&1
cd "${NEKRS_BUILD_DIR}"
cmake -DCMAKE_BUILD_TYPE="${NEKRS_BUILD_TYPE}" \
      -DCMAKE_Fortran_COMPILER="${NEKRS_FC}" \
      -DCMAKE_C_COMPILER="${NEKRS_CC}" \
      -DCMAKE_CXX_COMPILER="${NEKRS_CXX}" \
      -DCMAKE_Fortran_FLAGS="${NEKRS_FFLAGS}"  \
      -DCMAKE_C_FLAGS="${NEKRS_CFLAGS}" \
      -DCMAKE_CXX_FLAGS="${NEKRS_CXXFLAGS}" \
      -DCMAKE_INSTALL_PREFIX="${NEKRS_INSTALL_DIR}" \
      -DNEK5000_PPLIST="${NEKRS_NEK5000_PPLIST}" \
      -DLIBP_DEFINES="${NEKRS_LIBP_DEFINES}" \
      ${NEKRS_DIR} && make install

if [ $? -ne 0 ]; then
  echo
  echo "##################################################################"
  echo
  echo "An error occured duing installation!"
  echo
  echo "##################################################################"
  ${NEKRS_EXIT_CMD} 1
else
  echo
  echo "##################################################################"
  echo
  echo "Installation to $NEKRS_INSTALL_DIR successful!"
  echo
  echo "##################################################################"
  ${NEKRS_EXIT_CMD} 0
fi
echo
